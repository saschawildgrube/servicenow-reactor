<?xml version="1.0" encoding="UTF-8"?><record_update table="x_snc_reactor_component">
    <x_snc_reactor_component action="INSERT_OR_UPDATE">
        <content_css/>
        <dependencies>e407e7b5dbb88610f0f1d03cd3961934</dependencies>
        <description>Renders a Google Maps map.</description>
        <jsx>false</jsx>
        <module>false</module>
        <name>GoogleMaps</name>
        <role>element</role>
        <script><![CDATA[class GoogleMaps extends ReactorComponent
{

	constructor(props)
	{
		super(props);
		this.m_strId = 'googlemaps_'+GetRandomInteger(1000);  
	}
  
	render()
	{
		var nHeight = 600;   
		var nWidth = 800;
		if (this.props['height'] > 0)
		{
			nHeight = this.props['height'];
		}
		if (this.props['width'] > 0)
		{
			nWidth = this.props['width'];
		}
		return e(
			'div', 
			{
				id: this.m_strId,
				style:
				{
					height: nHeight,
					width: nWidth
				}
			},
			null);
	}

	componentDidMount()
	{
		this.RenderGoogleMaps(''+this.m_strId, this.props);
	}
  
	RenderGoogleMaps(strSelector,aProps)
	{
			
		var fLat = GetValue(aProps,'lat');
		if (fLat == null)
		{
			fLat = 30;
		}
		var fLong = GetValue(aProps,'long');
		if (fLong == null)
		{
			fLong = 0;
		}
			
		var nZoom = GetValue(aProps,'zoom');
		if (nZoom == null)
		{
			nZoom = 2;
		}
			
		var strType = GetValue(aProps,'type');
		if (strType == null)
		{
			strType = 'terrain';
		}

		var bTypeControl = GetValue(aProps,'typecontrol');
		if (bTypeControl == null)
		{
			bTypeControl = true;
		}

		var bStreetViewControl = GetValue(aProps,'streetviewcontrol');
		if (bStreetViewControl == null)
		{
			bStreetViewControl = true;
		}
	
		var aMarkers = GetValue(aProps,'markers');
		if (aMarkers == null)
		{
			aMarkers = [];
		}	

		function onClickMarker()
		{
			var strLink = GetStringValue(GetValue(this,'link'));
			if (strLink != '')
			{
				window.alert(strLink);
				//window.location.href = strLink;
			}
		}
	
		var map = new google.maps.Map(
			document.getElementById(strSelector),
			{
				zoom: nZoom, 
				center: new google.maps.LatLng(fLat,fLong),  
				mapTypeId: strType,
				mapTypeControl: bTypeControl,
				streetViewControl: bStreetViewControl
			});

		for (var nMarker = 0; nMarker < aMarkers.length; nMarker++)
		{
			var marker = aMarkers[nMarker];
		
			var strToolTip = GetStringValue(GetValue(marker,'tooltip'));
			var strLink = GetStringValue(GetValue(marker,'link'));
			
			var position = new google.maps.LatLng(GetValue(markerDef,'lat'),GetValue(markerDef,'long'));
			
			var fSize = GetValue(markerDef,'size');
			if (fSize < 0 || fSize > 1)
			{
				fSize = 1.0;
			}
	
			var fOpacity = GetNumberValue(GetValue(markerDef,'opacity'));
			if (fOpacity < 0 || fOpacity > 1)
			{
				fOpacity = 1.0;
			}
			
			var fScale = 10.0 + (40.0 * fSize);
			
			var strColor = GetStringValue(GetValue(markerDef,'color'));
			if (strColor == '')
			{
				strColor = 'red';
			}
			
			var gm_marker = new google.maps.Marker(
				{
					map: map,
					position: position,
					title: strToolTip,
					icon:
					{
						path: google.maps.SymbolPath.CIRCLE,
						scale: fScale,
						fillColor: strColor, 
						fillOpacity: fOpacity,
						strokeWeight: 0.4
					} 
				});
			
			if (strLink != '')
			{
				gm_marker.link = strLink;
				//gm_marker.addListener('click', onClickMarker);
			}
		}

	}
  
}]]></script>
        <source_type>ui_script</source_type>
        <sys_class_name>x_snc_reactor_component</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-03-08 12:44:37</sys_created_on>
        <sys_id>f40e87bddb388610f0f1d03cd39619b7</sys_id>
        <sys_mod_count>2</sys_mod_count>
        <sys_name>GoogleMaps</sys_name>
        <sys_package display_value="Reactor" source="x_snc_reactor">e5879c7fdb39d110dcbdd03cd3961946</sys_package>
        <sys_policy/>
        <sys_scope display_value="Reactor">e5879c7fdb39d110dcbdd03cd3961946</sys_scope>
        <sys_update_name>x_snc_reactor_component_f40e87bddb388610f0f1d03cd39619b7</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-03-08 14:36:22</sys_updated_on>
        <type>script</type>
        <ui_script display_value="x_snc_reactor.GoogleMaps">aecd83bddb388610f0f1d03cd39619fe</ui_script>
        <url/>
    </x_snc_reactor_component>
</record_update>
