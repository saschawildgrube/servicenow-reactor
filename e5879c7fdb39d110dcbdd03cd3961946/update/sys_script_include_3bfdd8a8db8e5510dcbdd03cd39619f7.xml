<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>public</access>
        <active>true</active>
        <api_name>x_snc_reactor.HtmlRenderReactorComponents</api_name>
        <caller_access/>
        <client_callable>false</client_callable>
        <description>Renders descriptions of React components contained in an app.</description>
        <mobile_callable>false</mobile_callable>
        <name>HtmlRenderReactorComponents</name>
        <sandbox_callable>false</sandbox_callable>
        <script><![CDATA[function HtmlRenderReactorComponents(strAppSysIdOrScope)
{
	var GetAppRecord = x_snc_devtools.GetAppRecord;
	var IsValidRecord = x_snc_devtools.IsValidRecord;
	var GetInstanceRecordPath = x_snc_devtools.GetInstanceRecordPath;
	var GetStringValue = x_snc_devtools.GetStringValue;
	var IsValidSysId = x_snc_devtools.IsValidSysId;	
	
	var grApp = GetAppRecord(strAppSysIdOrScope);
	var strAppSysId = '';
	if (IsValidRecord(grApp) == true)
	{
		strAppSysId = GetStringValue(grApp.sys_id);
	}
	/*if (IsValidSysId(strAppSysId) == false)
	{
		return '';
	}
	*/
	
	function HtmlRenderReactorComponentDoc(strItem, strURL, strDesc, strProps)
	{
		var GetStringValue = x_snc_devtools.GetStringValue;
		var HtmlRenderLink = x_snc_devtools.HtmlRenderLink;

		strURL = GetStringValue(strURL);
		strDesc = GetStringValue(strDesc);
		var strHTML = '';
		//strHTML += '<li>';
		if (strURL != '')
		{
			strHTML += '<h4>'+HtmlRenderLink(strURL,strItem,true)+'</h4>';
		}
		else
		{
			strHTML += '<h4>'+strItem +'</4>&#160;';
		}
		strHTML += '<div style="padding-left: 20px;">';
		if (strDesc != '')
		{
			strHTML += '<p>'+strDesc+'</p>';
		}
		if (strProps != '')
		{
			strHTML += strProps;
		}
		strHTML += '</div>';
		//strHTML += '</li>';		
		return strHTML;
	}	
	
	function HtmlRenderReactorComponentsByRole(strRole)
	{
		var strHtml = '';
		
	
		var grComponent = new GlideRecord('x_snc_reactor_component');
		if (IsValidSysId(strAppSysId) == true)
		{
			grComponent.addQuery('sys_scope','=',grApp.sys_id);
		}
		grComponent.addQuery('role','=',strRole);
		grComponent.orderBy('name');
		grComponent.addActiveQuery();
		grComponent.query();

		if (grComponent.getRowCount() > 0)
		{
			var strRoleName = strRole;
			var grChoice = new GlideRecord('sys_choice');
			grChoice.addQuery('name','=','x_snc_reactor_component');
			grChoice.addQuery('element','=','role');
			grChoice.addQuery('language','=','en');
			grChoice.addQuery('value','=',strRole);
			grChoice.query();
			if (grChoice.next())
			{
				strRoleName = grChoice.label;
			}
			
			strHtml += '<h3>'+strRoleName+'</h3>';
			//strHtml += '<ul>';			
		
			while (grComponent.next())
			{
				var strName = GetStringValue(grComponent.getValue('name'));
				var strDesc = GetStringValue(grComponent.getValue('description'));
				var strProps = '';

				var grProp = new GlideRecord('x_snc_reactor_props');
				grProp.addQuery('component','=',grComponent.sys_id);
				grProp.orderBy('name');
				grProp.query();
				if (grProp.getRowCount() > 0)
				{
					strProps += '<table style="border-collapse: separate; vertical-align: top;"><tbody>';
					while (grProp.next())
					{
						strProps += '<tr>';
						strProps += '<td style="vertical-align: top; padding-right: 5px;"><b>'+grProp.name+'</b></td>';
						strProps += '<td style="vertical-align: top; padding-right: 5px;">'+grProp.type+'</td>';
						strProps += '<td style="vertical-align: top; padding-right: 5px;">'+((grProp.mandatory)?('mandatory'):(''))+'</td>';
						strProps += '<td style="vertical-align: top; padding-right: 5px;">'+grProp.description+'</td>';
						strProps += '</tr>';
					}
					strProps += '</tbody></table>';
				}

				strHtml += HtmlRenderReactorComponentDoc(
					strName,
					GetInstanceRecordPath('x_snc_reactor_component',grComponent.sys_id),
					strDesc,
					strProps
				);
			}
			//strHtml += '</ul>';
		}
		return strHtml;		
	}
	
	var strHtml = '';
	
	var grChoice = new GlideRecord('sys_choice');
	grChoice.addQuery('name','=','x_snc_reactor_component');
	grChoice.addQuery('element','=','role');
	grChoice.addQuery('language','=','en');
	grChoice.addQuery('inactive','=','false');
	grChoice.orderBy('sequence');
	grChoice.query();
	while (grChoice.next())
	{
		strHtml += HtmlRenderReactorComponentsByRole(grChoice.value);
	}

	return strHtml;
}]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2022-09-16 17:29:32</sys_created_on>
        <sys_id>3bfdd8a8db8e5510dcbdd03cd39619f7</sys_id>
        <sys_mod_count>41</sys_mod_count>
        <sys_name>HtmlRenderReactorComponents</sys_name>
        <sys_package display_value="Reactor WORK IN PROGRESS" source="x_snc_reactor">e5879c7fdb39d110dcbdd03cd3961946</sys_package>
        <sys_policy/>
        <sys_scope display_value="Reactor WORK IN PROGRESS">e5879c7fdb39d110dcbdd03cd3961946</sys_scope>
        <sys_update_name>sys_script_include_3bfdd8a8db8e5510dcbdd03cd39619f7</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-12-13 12:58:20</sys_updated_on>
    </sys_script_include>
</record_update>
