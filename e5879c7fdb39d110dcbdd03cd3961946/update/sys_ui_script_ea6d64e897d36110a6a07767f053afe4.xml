<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ui_script">
    <sys_ui_script action="INSERT_OR_UPDATE">
        <active>true</active>
        <description>A UI Element component that provides a framework for a typical workspace with a menu, toolbar, content area, side bar navigation, a multi-purpose side bar, output/result area on the bottom and a status bar at the bottom of the screen. </description>
        <global>false</global>
        <ignore_in_now_experience>false</ignore_in_now_experience>
        <name>x_snc_reactor.Workspace</name>
        <script><![CDATA[class Workspace extends ReactorComponent
{
	constructor(props)
	{
		super(props);
	}
	
	componentDidMount()
	{
		$j(window).resize(this.adjustWorkspaceHeight);		
		this.adjustWorkspaceHeight();
	}	
	
	adjustWorkspaceHeight()
	{
		var nHeaderHeight = $j('#framework_header').height();
		var nToolBarHeight = $j('#framework_toolbar').height();
		var nFooterHeight = $j('#framework_footer').height();

		var nNonMainAreaHeight = nHeaderHeight + nToolBarHeight + nFooterHeight;
		var strMainAreaHeight = 'calc(100vh - ' + nNonMainAreaHeight  + 'px';

		$j('#framework_mainarea').css('height',strMainAreaHeight);
	}	

	render()
	{
		var logo = e('div',
			{
				className: 'framework_logo',
				style:
				{
					flex: '0 1 auto'
				}
			},this.props.logo);		

		
		var menu = e('div',
			{
				className: 'framework_menu',
				style:
				{
					flex: '1 1 auto'
				}
			},this.props.menu);		
		
		var user = e('div',
			{
				className: 'framework_user',
				style:
				{
					flex: '0 1 auto',
					minWidth: '20px'
				}
			},this.props.user);		
		
		var header = e('header',
			{
				id: 'framework_header',
				className: 'framework_header',
				style:
				{
					display: 'flex',
					flex: '0 1 auto',
					flexDirection: 'row',
					width: '100%'
				}
			},[
				logo,
				menu,
				user
			]);
		

		var toolbar = e('div',
			{
				id: 'framework_toolbar',
				className: 'framework_toolbar',
				style:
				{
					flex: '0 1 auto',
					width: '100%',
				}
			}, this.props.toolbar);
		
		var toolbar = e('div',
			{
				id: 'framework_toolbar',
				className: 'framework_toolbar',
				style:
				{
					flex: '0 1 auto',
					width: '100%',
				}
			}, this.props.toolbar);		
	
		var leftbarheader = e('div',
			{
				className: 'framework_leftbar_header',
				style: 
				{
					display: 'flex',
					flex: '0 1 auto',
					flexDirection: 'column',
				}
			},this.props.leftbarheader);		
		
		var treenavigation = e('div',
			{
				className: 'framework_treenavigation',
				style: 
				{
					display: 'flex',
					flex: '0 1 auto',
					flexDirection: 'column',
					height: '100%',
					overflowY: 'auto'
				}
			},this.props.treenavigation);
		
		var leftbar = e('div',
			{
				className: 'framework_leftbar',
				style: 
				{
					display: 'flex',
					flex: '0 1 auto',
					flexDirection: 'column',
					width: '400px',
					height: '100%',
					overflowY: 'auto',
				}
			},[leftbarheader,treenavigation]);		

		var content = e('div',
			{
				className: 'framework_content',
				style:
				{
					display: 'flex',
					flex: '1 1 auto',
					flexDirection: 'column'
				}
			},this.props.content);	
		
		var sidebar = null;
		if (this.props.sidebar != null)
		{
			sidebar = e('div',
				{
					className: 'framework_sidebar',
					style: 
					{
						flex: '0 1 auto'
					}
				}, this.props.sidebar);	
		}
		
		var mainarea = e('div',
			{
				id: 'framework_mainarea',
				className: 'framework_mainarea',
				style:
				{
					display: 'flex',
					flex: '1 1 auto',
					flexDirection: 'row',
					width: '100%'
				}
			},[leftbar,content,sidebar]);
		
		var status = e('div',
			{
				className: 'framework_statusbar',
				style:
				{
				}
			},this.props.status);
		
		var footer = e('footer',
			{
				id: 'framework_footer',
				className: 'framework_footer',
				style:
				{
					display: 'flex',
					flexDirection: 'row',
					width: '100%',
					bottom: '0'
				}
			},[
				status
			]);
		
		var framework = e('div',
			{
				className: 'framework',
				style:
				{
					display: 'flex',
					flexDirection: 'column',
					height: '100%',
					width: '100%'
				}
			},
			[
				header,
				toolbar,
				mainarea,
				footer
			]);
		
		return e(Fullscreen,{},framework);	
	}	
}]]></script>
        <script_name>Workspace</script_name>
        <sys_class_name>sys_ui_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2023-06-04 18:09:19</sys_created_on>
        <sys_id>ea6d64e897d36110a6a07767f053afe4</sys_id>
        <sys_mod_count>132</sys_mod_count>
        <sys_name>x_snc_reactor.Workspace</sys_name>
        <sys_package display_value="Reactor" source="x_snc_reactor">e5879c7fdb39d110dcbdd03cd3961946</sys_package>
        <sys_policy/>
        <sys_scope display_value="Reactor">e5879c7fdb39d110dcbdd03cd3961946</sys_scope>
        <sys_update_name>sys_ui_script_ea6d64e897d36110a6a07767f053afe4</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2025-02-07 18:36:47</sys_updated_on>
        <ui_type>0</ui_type>
        <use_scoped_format>false</use_scoped_format>
        <x_snc_devtools_global>false</x_snc_devtools_global>
    </sys_ui_script>
</record_update>
