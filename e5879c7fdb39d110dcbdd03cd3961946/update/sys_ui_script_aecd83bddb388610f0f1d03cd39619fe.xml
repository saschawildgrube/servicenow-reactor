<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ui_script">
    <sys_ui_script action="INSERT_OR_UPDATE">
        <active>true</active>
        <description>Renders a Google Maps map.</description>
        <global>false</global>
        <ignore_in_now_experience>false</ignore_in_now_experience>
        <name>x_snc_reactor.GoogleMaps</name>
        <script><![CDATA[class GoogleMaps extends ReactorComponent
{

	constructor(props)
	{
		super(props);
		this.m_strId = 'googlemaps_'+GetRandomInteger(1000);

		// This is to compensate an incompatibility between the Google Maps API and Prototype
		// Refer to https://issuetracker.google.com/issues/320761260?pli=1
		const nativeCodeElementRemove = Element.prototype.remove;
		Element.addMethods({remove: () => nativeCodeElementRemove.bind(this)}) //reset with native code
	}
  
	render()
	{
		var nHeight = 600;   
		var nWidth = 800;
		if (this.props['height'] > 0)
		{
			nHeight = this.props['height'];
		}
		if (this.props['width'] > 0)
		{
			nWidth = this.props['width'];
		}
		return e(
			'div', 
			{
				id: this.m_strId,
				style:
				{
					height: '100%',
					width: '100%'

					/*
					height: nHeight,
					width: nWidth
					*/
				}
			},
			null);
	}

	componentDidMount()
	{
		this.RenderGoogleMaps(''+this.m_strId, this.props);
	}
  
	RenderGoogleMaps(strSelector,aProps)
	{
		var fLat = GetValue(aProps,'latitude');
		if (fLat == null)
		{
			fLat = 30;
		}
		var fLong = GetValue(aProps,'longitude');
		if (fLong == null)
		{
			fLong = 0;
		}
			
		var nZoom = GetValue(aProps,'zoom');
		if (nZoom == null)
		{
			nZoom = 2;
		}
			
		var strType = GetValue(aProps,'type');
		if (strType == null)
		{
			strType = 'terrain';
		}

		var bTypeControl = GetValue(aProps,'typecontrol');
		if (bTypeControl == null)
		{
			bTypeControl = true;
		}

		var bStreetViewControl = GetValue(aProps,'streetviewcontrol');
		if (bStreetViewControl == null)
		{
			bStreetViewControl = true;
		}
	
		var aMarkers = GetValue(aProps,'markers');
		if (aMarkers == null)
		{
			aMarkers = [];
		}	

		function onClickMarker()
		{
			var strLink = GetStringValue(GetValue(this,'link'));
			if (strLink != '')
			{
				//console.log(strLink);
				//window.alert(strLink);
				RedirectToUrl(strLink,true);
				//window.location.href = strLink;
			}
		}
	
		var map = new google.maps.Map(
			document.getElementById(strSelector),
			{
				zoom: nZoom, 
				center: new google.maps.LatLng(fLat,fLong),  
				mapTypeId: strType,
				mapTypeControl: bTypeControl,
				streetViewControl: bStreetViewControl
			});

		console.log(map);

		for (var nMarker = 0; nMarker < aMarkers.length; nMarker++)
		{
			var marker = aMarkers[nMarker];
		
			var strToolTip = GetStringValue(GetValue(marker,'tooltip'));
			var strLink = GetStringValue(GetValue(marker,'link'));
			
			var position = new google.maps.LatLng(GetValue(marker,'latitude'),GetValue(marker,'longitude'));
			
			var fSize = GetValue(marker,'size');
			if (fSize < 0 || fSize > 1)
			{
				fSize = 1.0;
			}
	
			var fOpacity = GetIntegerValue(GetValue(marker,'opacity'));
			if (fOpacity < 0 || fOpacity > 1)
			{
				fOpacity = 1.0;
			}
			
			var fScale = 10.0 + (40.0 * fSize);
			
			var strColor = GetStringValue(GetValue(marker,'color'));
			if (strColor == '')
			{
				strColor = 'red';
			}
			
			var gm_marker = new google.maps.Marker(
				{
					map: map,
					position: position,
					title: strToolTip,
					/*icon:
					{
						path: google.maps.SymbolPath.CIRCLE,
						scale: fScale,
						fillColor: strColor, 
						fillOpacity: fOpacity,
						strokeWeight: 0.4
					}*/ 
				});
			
			if (strLink != '')
			{
				gm_marker.link = strLink;
				gm_marker.addListener('click', onClickMarker);
			}
		}

	}
  
}]]></script>
        <script_name>GoogleMaps</script_name>
        <sys_class_name>sys_ui_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-03-08 12:44:06</sys_created_on>
        <sys_id>aecd83bddb388610f0f1d03cd39619fe</sys_id>
        <sys_mod_count>21</sys_mod_count>
        <sys_name>x_snc_reactor.GoogleMaps</sys_name>
        <sys_package display_value="Reactor WORK IN PROGRESS" source="x_snc_reactor">e5879c7fdb39d110dcbdd03cd3961946</sys_package>
        <sys_policy/>
        <sys_scope display_value="Reactor WORK IN PROGRESS">e5879c7fdb39d110dcbdd03cd3961946</sys_scope>
        <sys_update_name>sys_ui_script_aecd83bddb388610f0f1d03cd39619fe</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-03-08 15:59:58</sys_updated_on>
        <ui_type>0</ui_type>
        <use_scoped_format>false</use_scoped_format>
        <x_snc_devtools_global>false</x_snc_devtools_global>
    </sys_ui_script>
</record_update>
