<?xml version="1.0" encoding="UTF-8"?><record_update table="syntax_editor_macro">
    <syntax_editor_macro action="INSERT_OR_UPDATE">
        <comments>Creates the boilerplate code for a new React(or) component.</comments>
        <name>react</name>
        <sys_class_name>syntax_editor_macro</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2022-09-16 22:10:35</sys_created_on>
        <sys_id>c2be11a4db829510dcbdd03cd39619ff</sys_id>
        <sys_mod_count>9</sys_mod_count>
        <sys_name>react</sys_name>
        <sys_package display_value="Reactor" source="x_snc_reactor">e5879c7fdb39d110dcbdd03cd3961946</sys_package>
        <sys_policy/>
        <sys_scope display_value="Reactor">e5879c7fdb39d110dcbdd03cd3961946</sys_scope>
        <sys_update_name>syntax_editor_macro_c2be11a4db829510dcbdd03cd39619ff</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-12-15 14:43:26</sys_updated_on>
        <text>class NewComponent extends ReactorComponent&#13;
{&#13;
	constructor(props)&#13;
	{&#13;
		super(props);&#13;
		this.state = { clicked: false };&#13;
	}&#13;
&#13;
	componentDidMount()&#13;
	{&#13;
	}&#13;
&#13;
	componentWillUnmount()&#13;
	{&#13;
	}&#13;
&#13;
	onClick()&#13;
	{&#13;
		this.setState( {clicked: true} );&#13;
		if (IsFunction(this.props.callbackOnClick) == true)&#13;
		{&#13;
			this.props.callbackOnClick();&#13;
		}&#13;
		else if (this.props.text != '')&#13;
		{&#13;
			DoModalMessage('New Reactor component',this.props.text);&#13;
		}&#13;
		else&#13;
		{&#13;
			DoModalMessage('New Reactor component','The button was clicked!');&#13;
		}&#13;
	}&#13;
&#13;
	render()&#13;
	{&#13;
		return e('button',&#13;
			{&#13;
				onClick: this.onClick&#13;
			},&#13;
			'Click me!');	&#13;
	}	&#13;
}</text>
    </syntax_editor_macro>
</record_update>
