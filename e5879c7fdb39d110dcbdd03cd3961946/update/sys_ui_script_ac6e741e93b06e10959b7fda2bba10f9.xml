<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ui_script">
    <sys_ui_script action="INSERT_OR_UPDATE">
        <active>true</active>
        <description>The React component loads information on all tables in the instance and displays the tables.</description>
        <global>false</global>
        <ignore_in_now_experience>false</ignore_in_now_experience>
        <name>x_snc_reactor.ReactorDemoForcedGraph3dCo</name>
        <script><![CDATA[class AllTablesController extends ReactorComponent
{
	constructor(props)
	{
		super(props);
		this.state = { loaded: false, tables: {} };
	}

	onServerRequestGetAllTables(response)
	{
		this.setState(
			{
				loaded: true,
				tables: response
			}
		);
	}

	renderTable(table,nLevel)
	{
		var aComponents = [];
		
		var strUrl = '/'+table.name+'_list.do';
		var strPaddingLeft = ((nLevel)*20)+'px';
/*		
		aComponents.push(
			<>
				<div style={{ paddingLeft: strPaddingLeft }} ><a href={strUrl} target="_blank">{ table.name }</a></div>
					
			</>
		);
*/
		aComponents.push(
			e('div',
				{
					style: { paddingLeft: strPaddingLeft } 
				},
				e('a',
					{
						href: strUrl,
						target: '_blank'
					},
					table.name))
			);
	
		var aExtendingTables = GetArrayValue(GetValue(table,'extending_tables'));
		for (var nExtendingTable = 0; nExtendingTable < aExtendingTables.length; nExtendingTable++)
		{
			var strExtendingTable = aExtendingTables[nExtendingTable];
			aComponents = ArrayAppend(aComponents,this.renderTable(this.state.tables[strExtendingTable],nLevel+1));
		}
		
		
		return aComponents;
	}
	
	render()
	{
		if (this.state.loaded == false)
		{
			ServerRequest('x_snc_devtools.DevToolsClientAPI','GetAllTables',{ extending_tables: true },this.onServerRequestGetAllTables);
			return e(Waiting,{ text: 'Loading Table Data...' });
		}
		var tables = this.state.tables;
/*		if (IsObject(tables) == false)
		{
			return e('div',{ }, 'Error: tables is not an object.');
		}*/
		
		var aTables = GetKeys(tables);
		if (aTables.length == 0)
		{
			return '';
		}
		
		var aComponents = [];

		for (var nTable = 0; nTable < aTables.length; nTable++)
		{
			var strTable = aTables[nTable];
			var table = tables[strTable];
			var strSuperClass = GetStringValue(GetValue(table,'super_class'));
			if (strSuperClass == '')
			{
				aComponents = ArrayAppend(aComponents,this.renderTable(table,1));
			}
		}

		aComponents.push(e('pre',{},RenderValue(tables)));

		return e('div',{},aComponents);	
	}	
}
var AllTables = AllTablesController;]]></script>
        <script_name>ReactorDemoForcedGraph3dController</script_name>
        <sys_class_name>sys_ui_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2025-04-11 07:55:57</sys_created_on>
        <sys_id>ac6e741e93b06e10959b7fda2bba10f9</sys_id>
        <sys_mod_count>1</sys_mod_count>
        <sys_name>x_snc_reactor.ReactorDemoForcedGraph3dCo</sys_name>
        <sys_package display_value="Reactor WORK IN PROGRESS" source="x_snc_reactor">e5879c7fdb39d110dcbdd03cd3961946</sys_package>
        <sys_policy/>
        <sys_scope display_value="Reactor WORK IN PROGRESS">e5879c7fdb39d110dcbdd03cd3961946</sys_scope>
        <sys_update_name>sys_ui_script_ac6e741e93b06e10959b7fda2bba10f9</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2025-04-11 07:56:29</sys_updated_on>
        <ui_type>0</ui_type>
        <use_scoped_format>false</use_scoped_format>
        <x_snc_devtools_global>false</x_snc_devtools_global>
    </sys_ui_script>
</record_update>
